function icon() {
  var svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
  var path = document.createElementNS("http://www.w3.org/2000/svg", "path");
  
  path.setAttribute(
    "d",
    "M140.498,84.39c-4.432-1.88-9.552,0.204-11.424,4.628c-1.876,4.42,0.204,9.548,4.628,11.42 c1.104,0.468,2.252,0.692,3.388,0.692c3.396,0,6.628-1.996,8.04-5.316C147.002,91.394,144.926,86.27,140.498,84.39z M143.042,94.934c-0.676,1.584-1.924,2.816-3.52,3.46c-1.6,0.644-3.352,0.632-4.936-0.04c-3.272-1.388-4.812-5.18-3.424-8.452 c1.044-2.456,3.436-3.932,5.952-3.932c0.836,0,1.684,0.164,2.504,0.508C142.89,87.866,144.426,91.658,143.042,94.934z"
  )
  
  path.setAttribute(
    "d",
    "M219.63,60.614c0.748,0.316,1.532,0.472,2.32,0.472c0.756,0,1.524-0.148,2.248-0.44c1.484-0.6,2.64-1.744,3.26-3.208 c1.284-3.032-0.136-6.548-3.172-7.832L190.534,35.31c-1.464-0.62-3.088-0.628-4.572-0.032c-1.484,0.6-2.64,1.744-3.26,3.208 c-1.284,3.032,0.136,6.548,3.172,7.832l0.044,0.016l-11.42,26.968c-3.396,1.808-6.312,4.184-8.656,7.028l-38.964-16.5 c0.42-3.728,0.076-7.492-0.96-11.124l11.416-26.952l0.044,0.02c0.748,0.316,1.532,0.472,2.32,0.472 c0.756,0,1.52-0.148,2.248-0.44c1.48-0.6,2.64-1.74,3.26-3.204c1.28-3.036-0.14-6.548-3.172-7.832L108.282,0.474 c-3.036-1.288-6.548,0.144-7.832,3.172c-1.28,3.032,0.14,6.548,3.172,7.836l0.744,0.316L97.49,28.034 c-5.824-1.036-11.748-0.676-17.256,1.176c-8.184,2.752-14.424,8.368-17.58,15.808L47.03,81.902l2.12,0.896l-31.16,59.424 c-0.308,0.724-0.512,1.468-0.724,2.212c-4.16,0.42-8.008,3.024-9.824,7.316c-2.52,5.956,0.272,12.856,6.232,15.384l51.24,21.704 c1.476,0.624,3.012,0.92,4.528,0.92c4.588,0,8.984-2.744,10.968-7.424c1.22-2.876,1.244-6.064,0.064-8.976 c-0.356-0.88-0.84-1.68-1.376-2.432c0.448-0.748,0.848-1.54,1.2-2.368l24.44-62.212l1.132,0.48l40.268,17.056v0.004l4.576,1.936 l-27.704,60.884c-0.344,0.812-0.596,1.636-0.8,2.456c-0.928,0.136-1.852,0.344-2.744,0.712c-2.916,1.18-5.188,3.416-6.524,6.564 c-2.52,5.956,0.272,12.856,6.232,15.384l51.24,21.704c1.476,0.624,3.012,0.92,4.528,0.92c4.588,0,8.984-2.744,10.968-7.424 c1.22-2.876,1.24-6.064,0.06-8.976c-0.444-1.092-1.076-2.056-1.792-2.948c0.412-0.7,0.852-1.38,1.18-2.156l20.952-63.572 l2.12,0.896l15.62-36.884c5.484-12.956,0.108-28.068-12.036-36.836l6.876-16.236L219.63,60.614z M212.186,48.79l-1.768,3.612 l-4.708-1.992l1.812-3.596L212.186,48.79z M206.47,46.37l-1.808,3.592l-4.756-2.016l1.78-3.604L206.47,46.37z M200.642,43.898 l-1.784,3.604l-4.756-2.016l1.728-3.628L200.642,43.898z M194.782,41.414l-1.728,3.628l-4.7-1.992l1.828-3.584L194.782,41.414z M186.362,40.03c0.208-0.492,0.596-0.872,1.096-1.076c0.248-0.1,0.504-0.148,0.756-0.148c0.264,0,0.528,0.052,0.772,0.156 l0.14,0.06l-1.816,3.56c-0.428-0.216-0.776-0.56-0.96-1.02C186.15,41.066,186.154,40.518,186.362,40.03z M132.19,27.738 l-25.648-10.864l1.496-3.528l24.68,10.452l0.968,0.408L132.19,27.738z M141.558,21.054c-0.208,0.488-0.592,0.868-1.092,1.072 c-0.156,0.064-0.316,0.068-0.476,0.092l1.524-2.784C141.742,19.93,141.786,20.51,141.558,21.054z M140.494,18.422 c0.1,0.044,0.168,0.12,0.256,0.176l-1.768,3.528c-0.016-0.008-0.036-0.004-0.052-0.012l-0.044-0.02l-4.652-1.968l1.8-3.592 L140.494,18.422z M134.966,16.082l-1.848,3.572l-4.7-1.992l1.764-3.608L134.966,16.082z M129.142,13.614l-1.768,3.604 l-4.704-1.992l1.808-3.588L129.142,13.614z M123.426,11.194l-1.808,3.588l-4.756-2.016l1.78-3.6L123.426,11.194z M117.594,8.722 l-1.78,3.6l-4.756-2.016l1.724-3.624L117.594,8.722z M111.734,6.242l-1.724,3.624l-4.084-1.728v0.004l-0.62-0.264l1.828-3.584 L111.734,6.242z M104.118,5.19c0.208-0.488,0.592-0.868,1.092-1.072c0.248-0.1,0.508-0.152,0.76-0.152 c0.016,0,0.032,0.008,0.048,0.012L104.39,7.17C103.974,6.614,103.83,5.874,104.118,5.19z M106.094,17.918l25.648,10.864 l-7.876,18.588c-3.556-7.208-9.9-13.42-18.284-16.976c-1.368-0.58-2.76-1.04-4.16-1.452L106.094,17.918z M11.226,153.018 c0.804-1.9,2.308-3.376,4.24-4.156c0.52-0.212,1.056-0.356,1.596-0.452l-5.952,10.848 C10.354,157.366,10.322,155.15,11.226,153.018z M11.73,160.482l6.692-12.2c1.012,0.004,2.02,0.208,2.98,0.616l0.432,0.184 l-7.596,13.848C13.21,162.298,12.35,161.469,11.73,160.482z M15.238,163.469l7.652-13.948l3.12,1.324l-7.652,13.948 L15.238,163.469z M19.402,165.238l7.656-13.948l3.124,1.324l-7.656,13.948L19.402,165.238z M23.578,167.006l7.652-13.948 l3.124,1.324l-7.652,13.948L23.578,167.006z M27.75,168.774l7.652-13.948l3.124,1.324l-7.652,13.948L27.75,168.774z M31.922,170.542l7.652-13.948l3.124,1.324l-7.652,13.948L31.922,170.542z M36.094,172.305l7.652-13.948l3.124,1.324 l-7.652,13.948L36.094,172.305z M40.266,174.074l7.652-13.948l3.124,1.324l-7.652,13.948L40.266,174.074z M44.438,175.842 l7.652-13.948l3.124,1.324l-7.652,13.948L44.438,175.842z M48.614,177.61l7.648-13.948l3.124,1.324l-7.652,13.948L48.614,177.61z M52.778,179.378l7.656-13.948l3.12,1.324l-7.652,13.948L52.778,179.378z M56.954,181.142l7.652-13.948l3.124,1.324 l-7.652,13.948L56.954,181.142z M64.25,184.234l-3.124-1.324l7.652-13.948l3.124,1.324L64.25,184.234z M68.586,185.701 c-0.712-0.084-1.424-0.232-2.116-0.528l-1.172-0.496l7.636-13.92c1.056,0.504,1.96,1.232,2.68,2.132L68.586,185.701z M76.646,181.054c-1.2,2.836-3.908,4.564-6.8,4.7l6.48-11.816c0.164,0.296,0.34,0.584,0.472,0.9 C77.582,176.774,77.57,178.878,76.646,181.054z M76.626,167.045c-0.144,0.34-0.352,0.62-0.52,0.94 c-0.604-0.4-1.24-0.756-1.92-1.044l-51.24-21.704c-0.528-0.224-1.072-0.356-1.612-0.496c0.088-0.276,0.132-0.564,0.244-0.832 l4.128-7.856l54.096,22.912L76.626,167.045z M80.218,157.91l-53.98-22.864L52.826,84.35l21.932,9.288l26.328,11.152 L80.218,157.91z M52.238,79.79l14.08-33.228c2.7-6.38,8.092-11.208,15.188-13.592c7.172-2.416,15.176-2.032,22.528,1.084 c15.152,6.416,22.892,22.476,17.248,35.792l-14.076,33.228L52.238,79.79z M147.482,120.13l-36.404-15.42l15.54-36.684 l36.404,15.416L147.482,120.13z M116.714,197.702c0.804-1.9,2.308-3.38,4.24-4.16c0.732-0.292,1.488-0.436,2.244-0.508 l-6.32,11.456C115.886,202.49,115.722,200.05,116.714,197.702z M117.538,205.594l6.936-12.572c0.824,0.064,1.64,0.224,2.42,0.56 l0.852,0.36l-7.652,13.872C119.062,207.258,118.198,206.502,117.538,205.594z M121.086,208.314l7.684-13.936l3.068,1.296 l-7.688,13.936L121.086,208.314z M125.178,210.046l7.688-13.936l3.064,1.3l-7.688,13.932L125.178,210.046z M129.278,211.778 l7.684-13.932l3.064,1.296l-7.684,13.936L129.278,211.778z M133.366,213.51l7.684-13.932l3.064,1.296l-7.684,13.936 L133.366,213.51z M137.462,215.246l7.684-13.936l3.064,1.296l-7.684,13.936L137.462,215.246z M141.554,216.982l7.684-13.936 l3.064,1.3l-7.684,13.936L141.554,216.982z M145.646,218.71l7.684-13.932l3.064,1.3l-7.684,13.932L145.646,218.71z M149.742,220.446l7.684-13.932l3.064,1.296l-7.684,13.936L149.742,220.446z M153.83,222.182l7.688-13.936l3.064,1.3 l-7.688,13.932L153.83,222.182z M157.926,223.914l7.684-13.932l3.064,1.296l-7.684,13.932L157.926,223.914z M162.018,225.642 l7.684-13.928l3.064,1.296l-7.684,13.932L162.018,225.642z M166.11,227.382l7.684-13.936l3.064,1.3l-7.684,13.932L166.11,227.382 z M171.958,229.857l-1.756-0.744l7.684-13.932l0.244,0.104c0.964,0.408,1.816,1,2.528,1.732l-7.32,13.268 C172.874,230.186,172.41,230.05,171.958,229.857z M182.134,225.738c-1.312,3.1-4.42,4.876-7.608,4.692l6.884-12.48 c0.344,0.488,0.652,1.004,0.88,1.572C183.07,221.45,183.058,223.562,182.134,225.738z M181.642,211.534 c-0.136,0.32-0.316,0.604-0.476,0.904c-0.48-0.292-0.964-0.588-1.488-0.812l-51.236-21.704c-0.688-0.292-1.396-0.504-2.116-0.66 c0.108-0.324,0.18-0.652,0.316-0.972l3.62-7.948l54.104,22.92L181.642,211.534z M184.722,202.174l-53.988-22.872l23.636-51.94 l15.232,6.452l33.032,13.988L184.722,202.174z M220.386,111.822L206.31,145.05l-36.384-15.408l-17.568-7.444l-1.02-0.432 l14.08-33.232c2.7-6.38,8.092-11.208,15.188-13.592c7.172-2.416,15.18-2.032,22.528,1.084 C218.29,82.446,226.026,98.502,220.386,111.822z M208.614,74.35c-1.26-0.716-2.556-1.392-3.932-1.976 c-8.104-3.436-16.936-3.884-24.924-1.308l7.88-18.608l25.648,10.864L208.614,74.35z M213.734,62.274L188.086,51.41l1.496-3.528 l7.196,3.048l18.448,7.82L213.734,62.274z M213.522,53.71l-2.056-0.868l1.768-3.612l4.784,2.028l-1.852,3.572L213.522,53.71z M219.086,51.71l3.66,1.552c0.396,0.168,0.684,0.472,0.896,0.82l-1.5,2.992c-0.328,0.032-0.66,0.012-0.964-0.12l-0.748-0.316 l-3.148-1.332L219.086,51.71z"
  )
  
  svg.setAttribute("style", "enable-background: new 0 0 230 230;")
  svg.setAttribute("viewBox", "0 0 230 230")
  svg.setAttribute("x", "0px")
  svg.setAttribute("y", "0px")
  svg.setAttribute("version", "1.1")
  svg.setAttribute("xml:space", "preserve")
  
  svg.appendChild(path);
  
  return svg;
}

// This will get all pages in the graph and return them as a string in an array
function getAllPages() {
    pageObjs = window.roamAlphaAPI.q('[:find ?e :where [?e :node/title] ]');
    var pageNames = []
    for (i = 0; i < pageObjs.length; i++) {
        pageNames.push(window.roamAlphaAPI.pull('[:node/title]', pageObjs[i][0])[":node/title"]);
    }
    return pageNames
}

function lookForMatchingBlocks(blocks, pages) {
    for (i = 0; i < blocks.length; i++) {
        // all blocks only have 1 top level child node, a span.
        // skip to the second level of children
        for (j = 0; j < blocks[i].childNodes[0].childNodes.length; j++) {
            node = blocks[i].childNodes[0].childNodes[j];
            if (node.nodeType == 3) { // only text, no more childrens
                if (addUnderlineSpanWrapper(node, pages) == true) {
                    return true
                }
                continue
            }
            if (node.nodeType == 1) { // element node type, need to dig deeper
                // these are already linked, skip
                if (node.hasAttribute("data-link-title")
                    || node.hasAttribute("data-tag")
                    || node.hasAttribute("recommend")) {
                    continue
                }
                if (node.hasChildNodes()) {
                    for (k = 0; k < node.childNodes.length; k++) {
                        if (node.childNodes[k].nodeType == 3) { // only text, no more childrens
                            if (addUnderlineSpanWrapper(node.childNodes[k])) {
                                return true
                            }
                            continue
                        }
                        if (node.nodeType == 1) { // element node type, need to dig deeper
                            // these are already linked, skip
                            if (node.childNodes[k].hasAttribute("data-link-title")
                                || node.childNodes[k].hasAttribute("data-tag")
                                || node.childNodes[k].hasAttribute("recommend")) {
                                continue
                            }
                        }
                    }
                }
            }
        }
    }
    return false
}

function traceBlocksOnPage() {
    // blocks on the page where the button is clicked
    // get all pages in the graph
    let pages = getAllPages();
    matchFound = false

    do {
        let blocks = document.getElementsByClassName("roam-block");
        matchFound = lookForMatchingBlocks(blocks, pages)
    } while (matchFound == true)
}

function addUnderlineSpanWrapper(node, pages) {
    console.log(node)
    try {

        for (l = 0; l < pages.length; l++) {
            if (node.textContent.includes(pages[l])) {
                // iterate over the childNodes and do stuff on childNodes that 
                // don't have the data-link-title attribute
                start = node.textContent.indexOf(pages[l])
                end = node.textContent.indexOf(pages[l]) + pages[l].length
                beforeLinkText = node.textContent.slice(0, start)
                afterLinkText = node.textContent.slice(end)
                // truncate existing text node
                node.textContent = beforeLinkText
                // create span with page name
                matchSpan = document.createElement("span")
                matchSpan.setAttribute("recommend", "underline")
                matchSpan.classList.add("underline")
                matchSpan.innerText = pages[l]
                // add that span after the text node
                node.parentNode.insertBefore(matchSpan, node.nextSibling)
                // create a text node with the remainder text
                remainderText = document.createTextNode(afterLinkText)
                // add that remainder text after inserted node
                node.parentNode.insertBefore(remainderText, node.nextSibling.nextSibling)
                return true
            }
        }
    }
    catch (err) {
        return false
    }
    return false
}
  
function createButton() {
      var spanOne = document.createElement('span');
      spanOne.classList.add('bp3-popover-wrapper');
      var spanTwo = document.createElement('span');
      spanTwo.classList.add('bp3-popover-target');
      spanOne.appendChild(spanTwo);
      var outboundUnlinkedRefs = document.createElement('span');
      outboundUnlinkedRefs.id = 'outboundUnlinkedRefs';
      outboundUnlinkedRefs.classList.add('bp3-icon-search', 'bp3-button', 'bp3-minimal');
      spanTwo.appendChild(outboundUnlinkedRefs);
      var roamTopbar = document.getElementsByClassName("roam-topbar");
      roamTopbar[0].childNodes[0].appendChild(spanOne);
      outboundUnlinkedRefs.onclick = traceBlocksOnPage;
}
  
createButton()
